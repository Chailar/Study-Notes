(window.webpackJsonp=window.webpackJsonp||[]).push([[55],{370:function(a,v,_){"use strict";_.r(v);var t=_(7),s=Object(t.a)({},(function(){var a=this,v=a._self._c;return v("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[v("h1",{attrs:{id:"操作系统"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#操作系统"}},[a._v("#")]),a._v(" 操作系统")]),a._v(" "),v("h2",{attrs:{id:"概论"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#概论"}},[a._v("#")]),a._v(" 概论")]),a._v(" "),v("h3",{attrs:{id:"概念"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#概念"}},[a._v("#")]),a._v(" 概念")]),a._v(" "),v("h4",{attrs:{id:"定义"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#定义"}},[a._v("#")]),a._v(" 定义")]),a._v(" "),v("p",[a._v("管理系统资源、控制程序执行、改善人机界面、提供各种服务，合理组织计算机工作流程和为用户方便而有效地使用计算机提供良好运行环境的最基本的系统软件。")]),a._v(" "),v("h4",{attrs:{id:"主要目标"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#主要目标"}},[a._v("#")]),a._v(" 主要目标")]),a._v(" "),v("ul",[v("li",[a._v("方便使用")]),a._v(" "),v("li",[a._v("扩充功能")]),a._v(" "),v("li",[a._v("管理资源")]),a._v(" "),v("li",[a._v("提高效率")]),a._v(" "),v("li",[a._v("开放环境")])]),a._v(" "),v("h4",{attrs:{id:"主要特性"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#主要特性"}},[a._v("#")]),a._v(" 主要特性")]),a._v(" "),v("ul",[v("li",[a._v("共享性")]),a._v(" "),v("li",[a._v("并发性")]),a._v(" "),v("li",[a._v("虚拟性")]),a._v(" "),v("li",[a._v("异步性")])]),a._v(" "),v("h3",{attrs:{id:"功能"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#功能"}},[a._v("#")]),a._v(" 功能")]),a._v(" "),v("ul",[v("li",[a._v("处理器管理（进程管理）")]),a._v(" "),v("li",[a._v("存储管理")]),a._v(" "),v("li",[a._v("设备管理")]),a._v(" "),v("li",[a._v("文件管理")])]),a._v(" "),v("p",[v("img",{attrs:{src:"https://image-cl.oss-cn-nanjing.aliyuncs.com/img/image-20220104210556230.png",alt:"image-20220104210556230"}})]),a._v(" "),v("h3",{attrs:{id:"流行操作系统"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#流行操作系统"}},[a._v("#")]),a._v(" 流行操作系统")]),a._v(" "),v("ul",[v("li",[a._v("安卓")]),a._v(" "),v("li",[a._v("IOS")]),a._v(" "),v("li",[a._v("windows")]),a._v(" "),v("li",[a._v("Unix")]),a._v(" "),v("li",[a._v("Linux")]),a._v(" "),v("li",[a._v("HarmonyOS")])]),a._v(" "),v("h2",{attrs:{id:"处理器管理"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#处理器管理"}},[a._v("#")]),a._v(" 处理器管理")]),a._v(" "),v("h3",{attrs:{id:"功能-2"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#功能-2"}},[a._v("#")]),a._v(" 功能")]),a._v(" "),v("ul",[v("li",[a._v("统计系统中每个作业程序的状态，以便将处理器分配给相关候选程序。")]),a._v(" "),v("li",[a._v("指定处理器调度策略，也是挑选待分配候选程序的必须遵循的原则。")]),a._v(" "),v("li",[a._v("实施处理器的分配，以便让获得处理器的程序真正投入运行。")])]),a._v(" "),v("h3",{attrs:{id:"进程"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#进程"}},[a._v("#")]),a._v(" 进程")]),a._v(" "),v("h4",{attrs:{id:"属性"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#属性"}},[a._v("#")]),a._v(" 属性")]),a._v(" "),v("ul",[v("li",[a._v("动态性")]),a._v(" "),v("li",[a._v("结构性")]),a._v(" "),v("li",[a._v("独立性")]),a._v(" "),v("li",[a._v("并发性")]),a._v(" "),v("li",[a._v("制约性")]),a._v(" "),v("li",[a._v("共享性")])]),a._v(" "),v("h4",{attrs:{id:"状态"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#状态"}},[a._v("#")]),a._v(" 状态")]),a._v(" "),v("ul",[v("li",[v("p",[a._v("运行态")])]),a._v(" "),v("li",[v("p",[a._v("就绪态")])]),a._v(" "),v("li",[v("p",[a._v("等待态")])]),a._v(" "),v("li",[v("p",[a._v("挂起态")])]),a._v(" "),v("li",[v("p",[a._v("新建态")])]),a._v(" "),v("li",[v("p",[a._v("终止态")])])]),a._v(" "),v("h4",{attrs:{id:"进程控制块"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#进程控制块"}},[a._v("#")]),a._v(" 进程控制块")]),a._v(" "),v("p",[a._v("进程控制块（Process Control Block，PCB）是为了描述和控制进程的运行而定义的一种数表结构，它是进程存在的唯一标志，也是进程实体的一部分。操作系统对进程的管理和控制主要以PCB为依据。PCB中包括了操作系统所需要的进程运行的所有信息。")]),a._v(" "),v("h5",{attrs:{id:"信息"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#信息"}},[a._v("#")]),a._v(" 信息")]),a._v(" "),v("ul",[v("li",[a._v("标识信息")]),a._v(" "),v("li",[a._v("描述信息")]),a._v(" "),v("li",[a._v("现场信息")]),a._v(" "),v("li",[a._v("管理和控制信息")])]),a._v(" "),v("h4",{attrs:{id:"调度算法-理解"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#调度算法-理解"}},[a._v("#")]),a._v(" 调度算法（理解）")]),a._v(" "),v("p",[a._v("周转时间=运行结束时间-开始时间")]),a._v(" "),v("p",[a._v("响应比=1+等待时间/需要运行时间")]),a._v(" "),v("h4",{attrs:{id:"线程"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#线程"}},[a._v("#")]),a._v(" 线程")]),a._v(" "),v("h5",{attrs:{id:"特性"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#特性"}},[a._v("#")]),a._v(" 特性")]),a._v(" "),v("p",[a._v("没有挂起态，因为线程并不占有资源")]),a._v(" "),v("h3",{attrs:{id:"并发进程"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#并发进程"}},[a._v("#")]),a._v(" 并发进程")]),a._v(" "),v("h4",{attrs:{id:"临界区"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#临界区"}},[a._v("#")]),a._v(" 临界区")]),a._v(" "),v("p",[a._v("临界区就是并发进程中与共享变量有关的程序代码段。")]),a._v(" "),v("h4",{attrs:{id:"临界区要求"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#临界区要求"}},[a._v("#")]),a._v(" 临界区要求")]),a._v(" "),v("ul",[v("li",[v("p",[a._v("不存在有关进程间相对推进速度、系统内有多个CPU 的假定。")])]),a._v(" "),v("li",[v("p",[a._v("一次最多只能有一个进程进入临界区，也即没有两个或两个以上的进程能够同时进入临界区，当有一个进程在临界区内，其他想进入临界区的进程必须等待,这一点充分说明了临界区的互斥访问特性。")])]),a._v(" "),v("li",[v("h6",{attrs:{id:"不能让一个进程在临界区内无限制地运行下去-在临界区中的进程必须在有限时间内运行结束而离开临界区。"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#不能让一个进程在临界区内无限制地运行下去-在临界区中的进程必须在有限时间内运行结束而离开临界区。"}},[a._v("#")]),a._v(" 不能让一个进程在临界区内无限制地运行下去，在临界区中的进程必须在有限时间内运行结束而离开临界区。")])]),a._v(" "),v("li",[v("p",[a._v("等待进入临界区的进程，在时间上不能被无限推迟。")])])]),a._v(" "),v("h4",{attrs:{id:"pv操作-理解"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#pv操作-理解"}},[a._v("#")]),a._v(" PV操作（理解）")]),a._v(" "),v("h3",{attrs:{id:"管程"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#管程"}},[a._v("#")]),a._v(" 管程")]),a._v(" "),v("h4",{attrs:{id:"定义-2"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#定义-2"}},[a._v("#")]),a._v(" 定义")]),a._v(" "),v("p",[a._v("管程(Monitor)的基本思路是:将分散在各个进程中的临界区集中起来进行统一控制和管理,并且将系统中的共享资源用数据结构抽象地描述出来。然后对临界区的访问通过“管程”进行统一管理。所谓管程，就是由若干个数据结构、变量以及方法（函数）所组织成的一种特殊的结构,它的形式表现为一种特殊的模块或软件包。进程可以使用管程中的方法，但是不允许直接使用管程中的内部数据结构，管程内部定义的数据结构只可以由它内部所定义的方法（函数）直接访问。")]),a._v(" "),v("h4",{attrs:{id:"汉森和hoare"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#汉森和hoare"}},[a._v("#")]),a._v(" 汉森和Hoare")]),a._v(" "),v("p",[a._v("汉森：执行唤醒的人退出管程")]),a._v(" "),v("p",[a._v("Hoare：被唤醒的人退出管程")]),a._v(" "),v("h3",{attrs:{id:"高级通讯"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#高级通讯"}},[a._v("#")]),a._v(" 高级通讯")]),a._v(" "),v("ul",[v("li",[a._v("管道文件通信")]),a._v(" "),v("li",[a._v("共享存储器")]),a._v(" "),v("li",[a._v("消息传递")])]),a._v(" "),v("h3",{attrs:{id:"死锁"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#死锁"}},[a._v("#")]),a._v(" 死锁")]),a._v(" "),v("h4",{attrs:{id:"死锁的条件"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#死锁的条件"}},[a._v("#")]),a._v(" 死锁的条件")]),a._v(" "),v("ul",[v("li",[a._v("互斥使用资源条件:每一个资源任一时刻只能由一个进程使用，如果进程想申请被其他进程占用的资源，则该进程必须等待。")]),a._v(" "),v("li",[a._v("占有且申请资源条件:一个进程占有了资源还需要申请新的资源")]),a._v(" "),v("li",[a._v("不可抢夺式分配:一个进程不能从其他进程抢夺资源，一个资源只能由拥有该资源的进程使用完后主动释放。")]),a._v(" "),v("li",[a._v("循环等待条件;必然存在着一个进程循环等待链，链中的每一个进程都在等待它前一个进程所占用的资源。")])]),a._v(" "),v("h4",{attrs:{id:"银行家算法"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#银行家算法"}},[a._v("#")]),a._v(" 银行家算法")]),a._v(" "),v("p",[a._v("资源分配拒绝")]),a._v(" "),v("ul",[v("li",[a._v("安全状态")]),a._v(" "),v("li",[a._v("不安全状态")]),a._v(" "),v("li",[a._v("死锁状态")])]),a._v(" "),v("h2",{attrs:{id:"存储管理"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#存储管理"}},[a._v("#")]),a._v(" 存储管理")]),a._v(" "),v("h3",{attrs:{id:"功能-3"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#功能-3"}},[a._v("#")]),a._v(" 功能")]),a._v(" "),v("ul",[v("li",[a._v("内存分配和回收")]),a._v(" "),v("li",[a._v("内存保护")]),a._v(" "),v("li",[a._v("地址映射")]),a._v(" "),v("li",[a._v("内存共享")]),a._v(" "),v("li",[a._v("内存扩充")])]),a._v(" "),v("h4",{attrs:{id:"重定位"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#重定位"}},[a._v("#")]),a._v(" 重定位")]),a._v(" "),v("ul",[v("li",[v("p",[a._v("静态重定位，地址转换在运行前")]),a._v(" "),v("ul",[v("li",[a._v("优点：简单易实现，运行速度快")]),a._v(" "),v("li",[a._v("缺点：内存必须连续，受限制的，不可移动的")])])]),a._v(" "),v("li",[v("p",[a._v("动态重定位：地址转化在运行后")]),a._v(" "),v("ul",[v("li",[a._v("优点：内存可以不连续")]),a._v(" "),v("li",[a._v("缺点：运行速度慢")])])])]),a._v(" "),v("h3",{attrs:{id:"分区存储管理"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#分区存储管理"}},[a._v("#")]),a._v(" 分区存储管理")]),a._v(" "),v("h4",{attrs:{id:"单一连续区"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#单一连续区"}},[a._v("#")]),a._v(" 单一连续区")]),a._v(" "),v("h4",{attrs:{id:"固定分区"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#固定分区"}},[a._v("#")]),a._v(" 固定分区")]),a._v(" "),v("h4",{attrs:{id:"可变分区"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#可变分区"}},[a._v("#")]),a._v(" 可变分区")]),a._v(" "),v("h3",{attrs:{id:"简单分页存储管理"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#简单分页存储管理"}},[a._v("#")]),a._v(" 简单分页存储管理")]),a._v(" "),v("p",[a._v("一维存储")]),a._v(" "),v("h4",{attrs:{id:"二级和多级页表"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#二级和多级页表"}},[a._v("#")]),a._v(" 二级和多级页表")]),a._v(" "),v("p",[a._v("为了防止页表过大无法存储")]),a._v(" "),v("h3",{attrs:{id:"简单段式存储管理"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#简单段式存储管理"}},[a._v("#")]),a._v(" 简单段式存储管理")]),a._v(" "),v("p",[a._v("二维存储")]),a._v(" "),v("h3",{attrs:{id:"请求分页虚拟存储管理"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#请求分页虚拟存储管理"}},[a._v("#")]),a._v(" 请求分页虚拟存储管理")]),a._v(" "),v("h4",{attrs:{id:"置换算法-理解"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#置换算法-理解"}},[a._v("#")]),a._v(" 置换算法（理解）")]),a._v(" "),v("h2",{attrs:{id:"设备管理"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#设备管理"}},[a._v("#")]),a._v(" 设备管理")]),a._v(" "),v("h3",{attrs:{id:"功能-4"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#功能-4"}},[a._v("#")]),a._v(" 功能")]),a._v(" "),v("ul",[v("li",[a._v("缓冲区管理")]),a._v(" "),v("li",[a._v("设备分配")]),a._v(" "),v("li",[a._v("设备驱动")]),a._v(" "),v("li",[a._v("设备独立性和虚拟设备")])]),a._v(" "),v("h3",{attrs:{id:"io控制方式"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#io控制方式"}},[a._v("#")]),a._v(" IO控制方式")]),a._v(" "),v("ul",[v("li",[a._v("程序查询方式")]),a._v(" "),v("li",[a._v("中断方式")]),a._v(" "),v("li",[a._v("DMA方式")]),a._v(" "),v("li",[a._v("通道方式\n"),v("ul",[v("li",[a._v("CCW:通道命令字")]),a._v(" "),v("li",[a._v("CAW：通道地址字")]),a._v(" "),v("li",[a._v("CSW:通道状态字")])])])]),a._v(" "),v("h3",{attrs:{id:"缓冲技术"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#缓冲技术"}},[a._v("#")]),a._v(" 缓冲技术")]),a._v(" "),v("h4",{attrs:{id:"目的"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#目的"}},[a._v("#")]),a._v(" 目的")]),a._v(" "),v("p",[a._v("为了解决CPU和IO速度不匹配")]),a._v(" "),v("h4",{attrs:{id:"类型"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#类型"}},[a._v("#")]),a._v(" 类型")]),a._v(" "),v("ul",[v("li",[a._v("单缓冲")]),a._v(" "),v("li",[a._v("双缓冲")]),a._v(" "),v("li",[a._v("多缓冲")]),a._v(" "),v("li",[a._v("缓冲池")])]),a._v(" "),v("h3",{attrs:{id:"磁盘"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#磁盘"}},[a._v("#")]),a._v(" 磁盘")]),a._v(" "),v("p",[a._v("柱面号，扇区号，磁头号")]),a._v(" "),v("h4",{attrs:{id:"调度算法-理解-2"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#调度算法-理解-2"}},[a._v("#")]),a._v(" 调度算法（理解）")]),a._v(" "),v("h3",{attrs:{id:"虚拟设备"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#虚拟设备"}},[a._v("#")]),a._v(" 虚拟设备")]),a._v(" "),v("h4",{attrs:{id:"spooling技术"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#spooling技术"}},[a._v("#")]),a._v(" Spooling技术")]),a._v(" "),v("p",[a._v("CPU和外围设备真正并行工作，这种在联机的情况下实现的外围设备同时操作称为Spooling技术")]),a._v(" "),v("h4",{attrs:{id:"四种状态"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#四种状态"}},[a._v("#")]),a._v(" 四种状态")]),a._v(" "),v("ul",[v("li",[a._v("输入状态")]),a._v(" "),v("li",[a._v("后备状态")]),a._v(" "),v("li",[a._v("执行状态")]),a._v(" "),v("li",[a._v("完成状态")])]),a._v(" "),v("h2",{attrs:{id:"文件管理"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#文件管理"}},[a._v("#")]),a._v(" 文件管理")]),a._v(" "),v("h3",{attrs:{id:"功能-5"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#功能-5"}},[a._v("#")]),a._v(" 功能")]),a._v(" "),v("ul",[v("li",[a._v("文件的组织方式")]),a._v(" "),v("li",[a._v("文件的存取和使用方法")]),a._v(" "),v("li",[a._v("文件存储空间的管理")]),a._v(" "),v("li",[a._v("文件的目录管理")]),a._v(" "),v("li",[a._v("文件的共享性和安全性")])]),a._v(" "),v("h3",{attrs:{id:"文件物理结构"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#文件物理结构"}},[a._v("#")]),a._v(" 文件物理结构")]),a._v(" "),v("ul",[v("li",[a._v("顺序结构")]),a._v(" "),v("li",[a._v("链接结构")]),a._v(" "),v("li",[a._v("索引结构")]),a._v(" "),v("li",[a._v("Hash")])]),a._v(" "),v("h4",{attrs:{id:"存储空间管理"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#存储空间管理"}},[a._v("#")]),a._v(" 存储空间管理")]),a._v(" "),v("ul",[v("li",[a._v("连续分配")]),a._v(" "),v("li",[a._v("链式分配")]),a._v(" "),v("li",[a._v("索引分配")])]),a._v(" "),v("h4",{attrs:{id:"空间管理方法"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#空间管理方法"}},[a._v("#")]),a._v(" 空间管理方法")]),a._v(" "),v("ul",[v("li",[a._v("空闲文件目录")]),a._v(" "),v("li",[a._v("空闲块表")]),a._v(" "),v("li",[a._v("位视图")])]),a._v(" "),v("h3",{attrs:{id:"文件的使用"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#文件的使用"}},[a._v("#")]),a._v(" 文件的使用")]),a._v(" "),v("h4",{attrs:{id:"文件的共享"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#文件的共享"}},[a._v("#")]),a._v(" 文件的共享")]),a._v(" "),v("ul",[v("li",[a._v("静态共享")]),a._v(" "),v("li",[a._v("动态共享")]),a._v(" "),v("li",[a._v("符号链接共享")])]),a._v(" "),v("h4",{attrs:{id:"文件控制方式"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#文件控制方式"}},[a._v("#")]),a._v(" 文件控制方式")]),a._v(" "),v("ul",[v("li",[a._v("存取控制矩阵")]),a._v(" "),v("li",[a._v("存取控制表")]),a._v(" "),v("li",[a._v("用户权限表")]),a._v(" "),v("li",[a._v("口令和编码")])]),a._v(" "),v("h4",{attrs:{id:"文件完整性"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#文件完整性"}},[a._v("#")]),a._v(" 文件完整性")]),a._v(" "),v("ul",[v("li",[a._v("全量转储")]),a._v(" "),v("li",[a._v("增量转储")])])])}),[],!1,null,null,null);v.default=s.exports}}]);