(window.webpackJsonp=window.webpackJsonp||[]).push([[33],{348:function(t,e,v){"use strict";v.r(e);var _=v(7),a=Object(_.a)({},(function(){var t=this,e=t._self._c;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"客户端网页api"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#客户端网页api"}},[t._v("#")]),t._v(" 客户端网页API")]),t._v(" "),e("h2",{attrs:{id:"web-api"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#web-api"}},[t._v("#")]),t._v(" Web API")]),t._v(" "),e("h3",{attrs:{id:"api概念"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#api概念"}},[t._v("#")]),t._v(" API概念")]),t._v(" "),e("p",[t._v("应用程序接口（"),e("code",[t._v("API")]),t._v("，"),e("code",[t._v("Application Programming Interface")]),t._v("）是基于编程语言构建的结构，使开发人员更容易地创建复杂的功能。它们抽象了复杂的代码，并提供一些简单的接口规则直接使用。")]),t._v(" "),e("h2",{attrs:{id:"操纵文档"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#操纵文档"}},[t._v("#")]),t._v(" 操纵文档")]),t._v(" "),e("h3",{attrs:{id:"浏览器的重要部分"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#浏览器的重要部分"}},[t._v("#")]),t._v(" 浏览器的重要部分")]),t._v(" "),e("ul",[e("li",[t._v("window是载入浏览器的标签，在JavaScript中用"),e("code",[t._v("Window")]),t._v("对象来表示。")]),t._v(" "),e("li",[t._v("navigator表示浏览器存在于web上的状态和标识（即用户代理）。在JavaScript中，用"),e("code",[t._v("Navigator")]),t._v("来表示。你可以用这个对象获取一些信息，比如来自用户摄像头的地理信息、用户偏爱的语言、多媒体流等等。")]),t._v(" "),e("li",[t._v("document（在浏览器中用DOM表示）是载入窗口的实际页面，在JavaScript中用"),e("code",[t._v("Document")]),t._v(" 对象表示，你可以用这个对象来返回和操作文档中HTML和CSS上的信息。")])]),t._v(" "),e("h3",{attrs:{id:"文档对象模型"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#文档对象模型"}},[t._v("#")]),t._v(" 文档对象模型")]),t._v(" "),e("ul",[e("li",[e("strong",[t._v("元素节点")]),t._v(": 一个元素，存在于DOM中。")]),t._v(" "),e("li",[e("strong",[t._v("根节点")]),t._v(": 树中顶层节点，在HTML的情况下，总是一个"),e("code",[t._v("HTML")]),t._v("节点。")]),t._v(" "),e("li",[e("strong",[t._v("子节点")]),t._v(": "),e("em",[t._v("直接")]),t._v("位于另一个节点内的节点。")]),t._v(" "),e("li",[e("strong",[t._v("后代节点")]),t._v(": 位于另一个节点内"),e("em",[t._v("任意位置")]),t._v("的节点。")]),t._v(" "),e("li",[e("strong",[t._v("父节点")]),t._v(": 里面有另一个节点的节点。")]),t._v(" "),e("li",[e("strong",[t._v("兄弟节点")]),t._v(": DOM树中位于同一等级的节点。")]),t._v(" "),e("li",[e("strong",[t._v("文本节点")]),t._v(": 包含文字串的节点。")])]),t._v(" "),e("h3",{attrs:{id:"基本的dom操作"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#基本的dom操作"}},[t._v("#")]),t._v(" 基本的DOM操作")]),t._v(" "),e("h5",{attrs:{id:"查找结点"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#查找结点"}},[t._v("#")]),t._v(" 查找结点")]),t._v(" "),e("ul",[e("li",[e("code",[t._v("Document.querySelector()")]),t._v("使用CSS选择器选择元素")]),t._v(" "),e("li",[e("code",[t._v("Document.querySelectorAll()")]),t._v(" 匹配文档中每个匹配选择器的元素，并把它们的引用存储在一个"),e("code",[t._v("array")]),t._v("中")]),t._v(" "),e("li",[e("code",[t._v("Document.getElementById")]),t._v("()选择一个id属性值已知的元素")]),t._v(" "),e("li",[e("code",[t._v("Document.getElementsByTagName()")]),t._v("返回页面中包含的所有已知类型元素的数组。")])]),t._v(" "),e("h5",{attrs:{id:"创建并放置结点"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#创建并放置结点"}},[t._v("#")]),t._v(" 创建并放置结点")]),t._v(" "),e("ul",[e("li",[e("code",[t._v("Document.createElement()")]),t._v("创建一个元素")]),t._v(" "),e("li",[e("code",[t._v("Node.appendChild()")]),t._v("增加孩子结点")]),t._v(" "),e("li",[e("code",[t._v("Document.createTextNode()")]),t._v("创建一个文本节点")])]),t._v(" "),e("h5",{attrs:{id:"删除结点"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#删除结点"}},[t._v("#")]),t._v(" 删除结点")]),t._v(" "),e("p",[e("code",[t._v("Node.removeChild()")]),t._v("删除结点")]),t._v(" "),e("blockquote",[e("p",[t._v("删除结点需要元素的父节点来删除")])]),t._v(" "),e("h2",{attrs:{id:"从服务器获取数据"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#从服务器获取数据"}},[t._v("#")]),t._v(" 从服务器获取数据")]),t._v(" "),e("h3",{attrs:{id:"基本的ajax请求"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#基本的ajax请求"}},[t._v("#")]),t._v(" 基本的Ajax请求")]),t._v(" "),e("h3",{attrs:{id:"xmlhttprequest"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#xmlhttprequest"}},[t._v("#")]),t._v(" XMLHttpRequest")]),t._v(" "),e("h4",{attrs:{id:"fetch"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#fetch"}},[t._v("#")]),t._v(" Fetch")]),t._v(" "),e("h2",{attrs:{id:"绘图"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#绘图"}},[t._v("#")]),t._v(" 绘图")]),t._v(" "),e("h3",{attrs:{id:"画布"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#画布"}},[t._v("#")]),t._v(" 画布")]),t._v(" "),e("p",[e("code",[t._v("<canvas>")]),t._v("为画布组件，支持"),e("code",[t._v("width")]),t._v(","),e("code",[t._v("height")])]),t._v(" "),e("h3",{attrs:{id:"获取画布上下文"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#获取画布上下文"}},[t._v("#")]),t._v(" 获取画布上下文")]),t._v(" "),e("p",[e("code",[t._v("HTMLCanvasElement.getContext()")]),t._v("方法用来获得基础的绘画功能，用来在画布上画图。")]),t._v(" "),e("h3",{attrs:{id:"_2d画图"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_2d画图"}},[t._v("#")]),t._v(" 2D画图")]),t._v(" "),e("h4",{attrs:{id:"矩形"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#矩形"}},[t._v("#")]),t._v(" 矩形")]),t._v(" "),e("ul",[e("li",[e("p",[e("code",[t._v("fillRect()")]),t._v("用来绘制矩形")])]),t._v(" "),e("li",[e("p",[e("code",[t._v("fillStyle")]),t._v("属性为填充颜色")])]),t._v(" "),e("li",[e("p",[e("code",[t._v("strokeStyle")]),t._v("为描边颜色")])]),t._v(" "),e("li",[e("p",[e("code",[t._v("strokeRect()")]),t._v("为描边矩形")])]),t._v(" "),e("li",[e("p",[e("code",[t._v("lineWidth")]),t._v("表示宽度")])])]),t._v(" "),e("h4",{attrs:{id:"绘制路径"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#绘制路径"}},[t._v("#")]),t._v(" 绘制路径")]),t._v(" "),e("ul",[e("li",[e("code",[t._v("beginPath()")]),t._v("：在钢笔当前所在位置开始绘制一条路径。在新的画布中，钢笔起始位置为 (0, 0)。")]),t._v(" "),e("li",[e("code",[t._v("moveTo()")]),t._v("：将钢笔移动至另一个坐标点，不记录、不留痕迹，只将钢笔“跳”至新位置。")]),t._v(" "),e("li",[e("code",[t._v("fill()")]),t._v("：通过为当前所绘制路径的区域填充颜色来绘制一个新的填充形状。")]),t._v(" "),e("li",[e("code",[t._v("stroke()")]),t._v("：通过为当前绘制路径的区域描边，来绘制一个只有边框的形状。")]),t._v(" "),e("li",[t._v("路径也可和矩形一样使用 "),e("code",[t._v("lineWidth")]),t._v(" 和 "),e("code",[t._v("fillStyle")]),t._v(" / "),e("code",[t._v("strokeStyle")]),t._v(" 等功能。")])]),t._v(" "),e("h5",{attrs:{id:"画线"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#画线"}},[t._v("#")]),t._v(" 画线")]),t._v(" "),e("p",[e("code",[t._v("lineTo()")]),t._v("绘制直线")]),t._v(" "),e("h5",{attrs:{id:"画图"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#画图"}},[t._v("#")]),t._v(" 画图")]),t._v(" "),e("p",[e("code",[t._v("arc()")]),t._v("绘制圆形，有六个参数。前两个指定圆心的位置坐标，第三个是圆的半径，第四、五个是绘制弧的起、止角度（给定 0° 和 360° 便能绘制一个完整的圆），第六个是绘制方向（"),e("code",[t._v("false")]),t._v(" 是顺时针，"),e("code",[t._v("true")]),t._v(" 是逆时针）。")]),t._v(" "),e("h5",{attrs:{id:"文本"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#文本"}},[t._v("#")]),t._v(" 文本")]),t._v(" "),e("ul",[e("li",[e("code",[t._v("fillText()")]),t._v(" ：绘制有填充色的文本。")]),t._v(" "),e("li",[e("code",[t._v("strokeText()")]),t._v("：绘制文本外边框（描边）。")])]),t._v(" "),e("h5",{attrs:{id:"绘制图片"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#绘制图片"}},[t._v("#")]),t._v(" 绘制图片")]),t._v(" "),e("p",[e("code",[t._v("drawImage()")]),t._v(" 函数用来嵌入图片")]),t._v(" "),e("ul",[e("li",[t._v("第一个参数为图片引用。")]),t._v(" "),e("li",[t._v("参数 2、3 表示裁切部分左上顶点的坐标，参考原点为原图片本身左上角的坐标。原图片在该坐标左、上的部分均不会绘制出来。")]),t._v(" "),e("li",[t._v("参数 4、5 表示裁切部分的长、宽。")]),t._v(" "),e("li",[t._v("参数 6、7 表示裁切部分左上顶点在画布中的位置坐标，参考原点为画布左上顶点。")]),t._v(" "),e("li",[t._v("参数 8、9 表示裁切部分在画布中绘制的长、宽。本例中绘制时与裁切时面积相同，你也可以定制绘制的尺寸。")])]),t._v(" "),e("h4",{attrs:{id:"循环和动画"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#循环和动画"}},[t._v("#")]),t._v(" 循环和动画")]),t._v(" "),e("p",[e("code",[t._v("translate()")]),t._v("可用于移动画布的原点。")]),t._v(" "),e("h3",{attrs:{id:"webgl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#webgl"}},[t._v("#")]),t._v(" WebGL")]),t._v(" "),e("h2",{attrs:{id:"客户端存储"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#客户端存储"}},[t._v("#")]),t._v(" 客户端存储")]),t._v(" "),e("h3",{attrs:{id:"web-storage"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#web-storage"}},[t._v("#")]),t._v(" Web storage")]),t._v(" "),e("p",[t._v("所有的web storage数据都包含在浏览器内两个类似于对象的结构中："),e("code",[t._v("sessionStorage")]),t._v("和 "),e("code",[t._v("localStorage")]),t._v("。 前者只要对话存在，数据则存在；后者为常驻数据。")]),t._v(" "),e("h5",{attrs:{id:"函数"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#函数"}},[t._v("#")]),t._v(" 函数")]),t._v(" "),e("ul",[e("li",[e("code",[t._v("Storage.setItem()")]),t._v("方法允许您在存储中保存一个数据项——它接受两个参数：数据项的名字及其值。")]),t._v(" "),e("li",[e("code",[t._v("Storage.getItem()")]),t._v("方法接受一个参数——你想要检索的数据项的名称——并返回数据项的值。")]),t._v(" "),e("li",[e("code",[t._v("Storage.removeItem()")]),t._v("方法接受一个参数——你想要删除的数据项的名称——并从 web storage 中删除该数据项。")])]),t._v(" "),e("h5",{attrs:{id:"indexeddb"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#indexeddb"}},[t._v("#")]),t._v(" IndexedDB")]),t._v(" "),e("ul",[e("li",[e("p",[e("code",[t._v("window.indexedDB.open()")]),t._v("函数创建一个数据库请求对象,提供两个参数，前者我i数据库名，后者为版本号。")]),t._v(" "),e("blockquote",[e("p",[t._v("版本号很重要。如果要升级数据库（例如：更改表结构），则必须使用增加的版本号或者"),e("code",[t._v("onupgradeneeded")]),t._v("处理程序内指定的不同模式等再次运行代码。")])])]),t._v(" "),e("li",[e("p",[e("code",[t._v("request.onupgradeneeded")]),t._v("用来定义数据库的模式。")])]),t._v(" "),e("li",[e("p",[e("code",[t._v("IDBDatabase.createObjectStore()")]),t._v("用来在打开的数据库中创建一个新的对象库，这相当于传统数据库系统中的单个表。")])]),t._v(" "),e("li",[e("p",[e("code",[t._v("IDBObjectStore.createIndex()")]),t._v("方法创建索引字段。")])]),t._v(" "),e("li",[e("p",[e("code",[t._v("IDBDatabase.transaction()")]),t._v("方法用来打开对象存储的"),e("code",[t._v("readwrite")]),t._v("事务。")])]),t._v(" "),e("li",[e("p",[e("code",[t._v("IDBTransaction.objectStore()")]),t._v("方法用来访问对象库。")])]),t._v(" "),e("li",[e("p",[e("code",[t._v("IDBObjectStore.add()")]),t._v("方法用来添加记录。")])]),t._v(" "),e("li",[e("p",[e("code",[t._v("IDBObjectStore.openCursor()")]),t._v("方法用来打开对游标的请求 - 这是一个可用于迭代对象存储中的记录的构造。用IDBObjectStore.openCursor()方法打开对游标的请求 - 这是一个可用于迭代对象存储中的记录的构造。用"),e("code",[t._v("IDBCursor.continue()")]),t._v("来迭代。")])]),t._v(" "),e("li",[e("p",[e("code",[t._v("IDBObjectStore.delete()")]),t._v("函数用来删除数据库中的记录。")])])]),t._v(" "),e("h3",{attrs:{id:"离线文件处理"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#离线文件处理"}},[t._v("#")]),t._v(" 离线文件处理")])])}),[],!1,null,null,null);e.default=a.exports}}]);